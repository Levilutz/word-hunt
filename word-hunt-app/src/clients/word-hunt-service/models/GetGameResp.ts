/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetGameRespPlayer } from './GetGameRespPlayer';
import {
    GetGameRespPlayerFromJSON,
    GetGameRespPlayerFromJSONTyped,
    GetGameRespPlayerToJSON,
    GetGameRespPlayerToJSONTyped,
} from './GetGameRespPlayer';

/**
 * 
 * @export
 * @interface GetGameResp
 */
export interface GetGameResp {
    /**
     * 
     * @type {string}
     * @memberof GetGameResp
     */
    gameId: string;
    /**
     * 
     * @type {Array<Array<string | null>>}
     * @memberof GetGameResp
     */
    grid: Array<Array<string | null>>;
    /**
     * 
     * @type {boolean}
     * @memberof GetGameResp
     */
    ended: boolean;
    /**
     * 
     * @type {GetGameRespPlayer}
     * @memberof GetGameResp
     */
    thisPlayer: GetGameRespPlayer;
    /**
     * 
     * @type {GetGameRespPlayer}
     * @memberof GetGameResp
     */
    otherPlayer: GetGameRespPlayer;
}

/**
 * Check if a given object implements the GetGameResp interface.
 */
export function instanceOfGetGameResp(value: object): value is GetGameResp {
    if (!('gameId' in value) || value['gameId'] === undefined) return false;
    if (!('grid' in value) || value['grid'] === undefined) return false;
    if (!('ended' in value) || value['ended'] === undefined) return false;
    if (!('thisPlayer' in value) || value['thisPlayer'] === undefined) return false;
    if (!('otherPlayer' in value) || value['otherPlayer'] === undefined) return false;
    return true;
}

export function GetGameRespFromJSON(json: any): GetGameResp {
    return GetGameRespFromJSONTyped(json, false);
}

export function GetGameRespFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetGameResp {
    if (json == null) {
        return json;
    }
    return {
        
        'gameId': json['game_id'],
        'grid': json['grid'],
        'ended': json['ended'],
        'thisPlayer': GetGameRespPlayerFromJSON(json['this_player']),
        'otherPlayer': GetGameRespPlayerFromJSON(json['other_player']),
    };
}

export function GetGameRespToJSON(json: any): GetGameResp {
    return GetGameRespToJSONTyped(json, false);
}

export function GetGameRespToJSONTyped(value?: GetGameResp | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'game_id': value['gameId'],
        'grid': value['grid'],
        'ended': value['ended'],
        'this_player': GetGameRespPlayerToJSON(value['thisPlayer']),
        'other_player': GetGameRespPlayerToJSON(value['otherPlayer']),
    };
}

